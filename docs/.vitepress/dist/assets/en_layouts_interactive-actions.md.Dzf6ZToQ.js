import{_ as e,a as o}from"./chunks/v4_layouts_interactive_actions_add_action.Dc1ddwt9.js";import{_ as a,c as n,o as i,ae as r}from"./chunks/framework.CYV0OCM_.js";const f=JSON.parse('{"title":"Interactive Actions","description":"Create interactive actions for layouts and widgets","frontmatter":{"title":"Interactive Actions","description":"Create interactive actions for layouts and widgets"},"headers":[],"relativePath":"en/layouts/interactive-actions.md","filePath":"en/layouts/interactive-actions.md"}'),s={name:"en/layouts/interactive-actions.md"};function c(l,t,d,g,u,h){return i(),n("div",null,t[0]||(t[0]=[r('<h1 id="interactive-actions" tabindex="-1">Interactive Actions <a class="header-anchor" href="#interactive-actions" aria-label="Permalink to &quot;Interactive Actions&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>PLEASE NOTE:</strong> We are aware of some issues with Interactive Actions and are currently working on improvements to the work flow and accompanying documentation.</p></div><h2 id="documentation-under-review" tabindex="-1">Documentation under review... <a class="header-anchor" href="#documentation-under-review" aria-label="Permalink to &quot;Documentation under review...&quot;">​</a></h2><p>Actions can be attached to an entire <strong>Layout</strong> or a <strong>Widget</strong> which can be used to effect changes to the Layout. These can be triggered by <strong>Touch or Click</strong> or programmatically by <strong>webhook</strong>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>Scenario</strong>: A Product display has a product that the customer can pick up. An &#39;internet of things&#39; device, such as a light sensor could be used to trigger a webhook to SignaLink which loads that particular products information into a Layout to be shown.</p></div><p>More information on webhooks can be found in our Developer documentation <a href="/SignaLink-manual/docs/developer/player-control/webhooks.html">here</a>.</p><h2 id="adding-an-action" tabindex="-1">Adding an Action <a class="header-anchor" href="#adding-an-action" aria-label="Permalink to &quot;Adding an Action&quot;">​</a></h2><p>Widgets can have Actions attached to effect changes to the Layout, triggered by Touch, click or webhook.</p><p>Actions are created and managed from the Toolbox inside the <a href="/SignaLink-manual/guide/layouts/editor.html#toolbox">Layout Editor</a> and are shown on the <strong>Actions</strong> tab from the Properties Panel for a selected item:</p><p><img src="'+e+'" alt="Toolbar Interactive Actions"></p><ul><li>Select the required <strong>Action</strong> and drag to the Target.</li></ul><p><img src="'+o+'" alt="Add Action"></p><ul><li>Once added, use the properties panel to set the <strong>Trigger Type</strong> and <strong>Target</strong>.</li></ul><p>Set the <strong>Trigger Type</strong>:</p><ul><li>Trigger by touching or clicking anywhere on a Layout or a specific Widget.</li></ul><p>or</p><ul><li>Include a Trigger Code for a Web Hook, which must be present in the URL ``trigger=` parameter.</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When triggering by touch using Android, ensure that <strong>Touch</strong> capabilities are enabled for the device from <a href="/SignaLink-manual/guide/displays/settings.html">Display Settings</a> using the <strong>Advanced</strong> tab!</p></div><p>Configure the <strong>Trigger Target</strong>. Options available here will be dependent on the type of Action added:</p><ul><li><strong>Navigate to Layout</strong> uses a <strong>Layout Code</strong> to identify the Layout to be used. Therefore ensure that Target Layouts have a <strong>Code Identifier</strong> assigned from the Edit Layout form, in order to be included in this list for selection.</li><li><strong>Next Widget</strong> and <strong>Previous Widget</strong> Actions are only applicable for adding to <strong>Playlists</strong> to Target the &#39;Next&#39; and &#39;Previous&#39; items in a Playlists timeline.</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p><a href="/SignaLink-manual/guide/layouts/overlay.html">Overlay Layouts</a></p>',22)]))}const b=a(s,[["render",c]]);export{f as __pageData,b as default};
