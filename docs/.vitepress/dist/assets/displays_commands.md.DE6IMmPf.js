import{_ as a,a as t}from"./chunks/v4_displays_commands_add_command.CEi9y4Vh.js";import{_ as n,c as i,o as e,ae as o}from"./chunks/framework.CYV0OCM_.js";const b=JSON.parse('{"title":"명령 기능","description":"XMR, 일정 또는 레이아웃에서 실행할 명령 구성","frontmatter":{"title":"명령 기능","description":"XMR, 일정 또는 레이아웃에서 실행할 명령 구성"},"headers":[],"relativePath":"displays/commands.md","filePath":"displays/commands.md"}'),p={name:"displays/commands.md"};function l(c,s,d,r,h,u){return e(),i("div",null,s[0]||(s[0]=[o('<h1 id="명령-기능" tabindex="-1">명령 기능 <a class="header-anchor" href="#명령-기능" aria-label="Permalink to &quot;명령 기능&quot;">​</a></h1><p>SignaLink의 명령 기능은 사용자가 <strong>XMR</strong>, <strong>일정</strong> 또는 <strong>레이아웃</strong>에서 실행할 명령 세트를 구성하는 데 사용됩니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>명령은 모든 플레이어에 적용할 명령 문자열을 가질 수 있거나 플레이어별로 다른 명령 문자열을 가질 수 있으며, 이는 네트워크가 혼합되어 있거나 다른 디스플레이에 연결되어 있거나 플레이어 하드웨어가 약간 다른 경우에 특히 유용합니다.</p></div><p><strong>명령 레코드</strong>가 생성되어 <strong>디스플레이 프로필</strong>, <strong>예약된 이벤트</strong> 및 <strong>셸 명령 위젯</strong>에서 사용할 수 있는 &quot;일반 명령&quot;을 만들 수 있습니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>명령은 RS232, Android 인텐트 및 Philips SoC(시스템 온 칩) 기능에 쉽게 접근할 수 있게 해줍니다!</p></div><h2 id="명령-관리" tabindex="-1">명령 관리 <a class="header-anchor" href="#명령-관리" aria-label="Permalink to &quot;명령 관리&quot;">​</a></h2><p>명령은 CMS 메인 메뉴의 <strong>디스플레이</strong> 섹션에서 <strong>명령</strong>을 통해 생성되고 관리됩니다:</p><p><img src="'+a+'" alt="디스플레이 명령"></p><p>명령의 행 메뉴를 사용하여 편집, 삭제 및 <a href="/SignaLink-manual/users/features-and-sharing.html#content-share">공유</a> 옵션을 설정하세요.</p><h3 id="명령-추가" tabindex="-1">명령 추가 <a class="header-anchor" href="#명령-추가" aria-label="Permalink to &quot;명령 추가&quot;">​</a></h3><p><strong>명령 추가</strong> 버튼을 클릭하고 관련 폼 필드를 완료하세요:</p><p><img src="'+t+`" alt="명령 추가"></p><p><strong>명령</strong> 드롭다운 메뉴를 사용하여 구성할 다음 옵션 중 하나를 선택하세요:</p><h4 id="자유-텍스트" tabindex="-1">자유 텍스트 <a class="header-anchor" href="#자유-텍스트" aria-label="Permalink to &quot;자유 텍스트&quot;">​</a></h4><p>명령 문자열을 입력하세요</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>명령 문자열은 최종 실행된 명령을 나타내며 셸에 대한 직접 호출이거나 아래 &quot;헬퍼&quot; 섹션에서 지정된 <strong>헬퍼</strong>를 가질 수 있습니다.</p></div><h4 id="philips-android" tabindex="-1">Philips Android <a class="header-anchor" href="#philips-android" aria-label="Permalink to &quot;Philips Android&quot;">​</a></h4><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Phillips 상업용 디스플레이 통합은 Android v2 R200부터 사용할 수 있습니다.</p></div><p>다음 명령을 사용하여 일부 상업용 Phillips 디스플레이 측면에 있는 LED를 제어할 수 있습니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tpv_led|off</span></span>
<span class="line"><span>tpv_led|red</span></span>
<span class="line"><span>tpv_led|green</span></span>
<span class="line"><span>tpv_led|blue</span></span>
<span class="line"><span>tpv_led|white</span></span></code></pre></div><p>Android v2 R215부터 다음 명령을 사용하여 화면 백라이트를 켜고 끄는 통합이 추가되었습니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tpv|backlighton</span></span>
<span class="line"><span>tpv|backlightoff</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>아래 명령은 특정 Android 4 모델에서만 사용할 수 있습니다. 2016 모델 <a href="https://www.philips.co.uk/p-p/10BDL3051T_00/signage-solutions-multi-touch-display" target="_blank" rel="noreferrer">10BDL3051T</a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tpv|screenoff</span></span>
<span class="line"><span>tpv|screenon</span></span></code></pre></div><p><code>screenoff</code>는 화면을 끄고 낮은 전력 상태로 전환하며, <code>screenon</code>으로 다시 켤 수 있습니다.</p><p>다른 모든 모델의 경우 <code>screenoff</code>가 완전히 전원을 끄게 되어 현장 재시작이 필요하므로 <code>backlighton/off</code>를 사용하세요!</p></div><p>음소거/음소거 해제 명령도 v2 R215부터 추가되었습니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tpv|mute</span></span>
<span class="line"><span>tpv|unmute</span></span></code></pre></div><p><strong>참고:</strong> <code>backlighton/off</code>는 오디오를 음소거하지 않으므로 오디오가 재생 중인 경우 위의 <code>mute/unmute</code> 명령도 동시에 예약하고 싶을 것입니다.</p><h4 id="rs232" tabindex="-1">RS232 <a class="header-anchor" href="#rs232" aria-label="Permalink to &quot;RS232&quot;">​</a></h4><p>RS232 명령은 명령 문자열에 <code>rs232</code> 접두사를 사용하여 플레이어에서 실행할 수 있습니다. 명령 형식은 <code>rs232|&lt;connection string&gt;|&lt;command&gt;</code>입니다.</p><p>Windows에서는 다음 형식으로 연결 문자열을 제공해야 합니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;COM#&gt;,&lt;Baud Rate&gt;,&lt;Data Bits&gt;,&lt;Parity|None,Odd,Even,Mark,Space&gt;,&lt;StopBits|None,One,Two,OnePointFive&gt;,&lt;Handshake|None,XOnXOff,RequestToSend,RequestToSendXOnXOff&gt;,&lt;HexSupport|0,1,default 0&gt;</span></span></code></pre></div><p><strong>참고:</strong> 명령을 HEX 형식으로 보내야 하는 경우 명령 문자열에 바이트 문자열을 지정해야 합니다. 예: <code>7E 00 00 FF 00 00 00 00 00 00 00 00 00 00 00 00 00 FF</code>, 이는 플레이어에 의해 바이트 스트림으로 변환됩니다. 연결 문자열의 <code>HexSupport</code> 요소를 <code>1</code>로 설정해야 합니다.</p><p>Android에서는 다음 형식으로 연결 문자열을 제공해야 합니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;DeviceName&gt;,&lt;Baud Rate&gt;,&lt;Data Bits&gt;,&lt;Parity&gt;,&lt;StopBits&gt;,&lt;FlowControl&gt;</span></span></code></pre></div><p>각 설정은 해당하는 숫자로 나타냅니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DATA_BITS_5 = 5;</span></span>
<span class="line"><span>DATA_BITS_6 = 6;</span></span>
<span class="line"><span>DATA_BITS_7 = 7;</span></span>
<span class="line"><span>DATA_BITS_8 = 8;</span></span>
<span class="line"><span>PARITY_NONE = 0;</span></span>
<span class="line"><span>PARITY_ODD = 1;</span></span>
<span class="line"><span>PARITY_EVEN = 2;</span></span>
<span class="line"><span>PARITY_MARK = 3;</span></span>
<span class="line"><span>PARITY_SPACE = 4;</span></span>
<span class="line"><span>STOP_BITS_1 = 1;</span></span>
<span class="line"><span>STOP_BITS_15 = 3;</span></span>
<span class="line"><span>STOP_BITS_2 = 2;</span></span>
<span class="line"><span>FLOW_CONTROL_OFF = 0;</span></span>
<span class="line"><span>FLOW_CONTROL_RTS_CTS = 1;</span></span>
<span class="line"><span>FLOW_CONTROL_DSR_DTR = 2;</span></span>
<span class="line"><span>FLOW_CONTROL_XON_XOFF = 3;</span></span></code></pre></div><p>명령 자체는 연결 세부사항을 사용하여 RS232를 통해 전송되는 문자열입니다.</p><h4 id="android-인텐트" tabindex="-1">Android 인텐트 <a class="header-anchor" href="#android-인텐트" aria-label="Permalink to &quot;Android 인텐트&quot;">​</a></h4><p>Android 디스플레이 프로필은 <code>intent</code> 헬퍼를 사용하여 명령이 실행될 때 호출되어야 하는 인텐트를 지정할 수 있습니다. 명령 형식은 <code>intent|&lt;type|activity,service,broadcast&gt;|&lt;activity&gt;|[&lt;extras&gt;]</code>입니다.</p><p><code>[&lt;extras&gt;]</code>는 <strong>Android v2 R206</strong>부터 사용할 수 있는 선택적 매개변수로, 인텐트에 추가 데이터를 제공하는 데 사용됩니다. 이는 최소 하나의 객체가 포함된 배열을 포함하는 JSON 형식의 문자열이어야 합니다. 객체 형식은 아래와 같으며 한 줄에 있어야 합니다.</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;extra name&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;type|string,int,bool,intArray&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&lt;the</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> value</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> of</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> the</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> above</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> type&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>예를 들어, 일부 디바이스에서는 펌웨어를 프로그래밍하여 켜기/끄기 시간을 설정할 수 있습니다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[{</span></span>
<span class="line"><span>  &quot;name&quot;: &quot;timeon&quot;,</span></span>
<span class="line"><span>  &quot;type&quot;: &quot;intArray&quot;,</span></span>
<span class="line"><span>  &quot;value&quot;: [2018, 7, 28, 8, 40]</span></span>
<span class="line"><span>}, {</span></span>
<span class="line"><span>  &quot;name&quot;: &quot;timeoff&quot;,</span></span>
<span class="line"><span>  &quot;type&quot;: &quot;intArray&quot;,</span></span>
<span class="line"><span>  &quot;value&quot;: [2018, 7, 28, 21, 40]</span></span>
<span class="line"><span>}]</span></span></code></pre></div><p>이는 명령에서 다음과 같이 설정됩니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>intent|broadcast|activity|[{ &quot;name&quot;: &quot;timeon&quot;, &quot;type&quot;: &quot;intArray&quot;, &quot;value&quot;: [2018, 7, 28, 8, 40] }, { &quot;name&quot;: &quot;timeoff&quot;, &quot;type&quot;: &quot;intArray&quot;, &quot;value&quot;: [2018, 7, 28, 21, 40] }]</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>인텐트 헬퍼가 포함된 명령은 Windows 플레이어에서 무시됩니다!</p></div><h3 id="헬퍼" tabindex="-1">헬퍼 <a class="header-anchor" href="#헬퍼" aria-label="Permalink to &quot;헬퍼&quot;">​</a></h3><p><strong>명령 헬퍼</strong>는 더 고급 작업을 수행하기 위해 명령 문자열에 추가할 수 있는 접두사입니다. 접두사가 없는 명령은 플레이어를 실행하는 운영 체제의 셸에서 실행됩니다. Windows에서는 <code>cmd.exe</code>, Android에서는 <code>shell</code>입니다.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>SignaLink for Android <a href="/SignaLink-manual/docs/setup/helper-command-to-change-time-zone.html">시간대 변경을 위한 헬퍼 명령</a></p></div><h3 id="검증" tabindex="-1">검증 <a class="header-anchor" href="#검증" aria-label="Permalink to &quot;검증&quot;">​</a></h3><p><strong>검증 문자열</strong>은 <strong>명령</strong> 출력과 비교에 사용되며 일치하면 명령이 성공한 것으로 간주됩니다. 검증 문자열은 정확히 일치해야 합니다.</p><p>이는 &#39;Reboot&#39;라는 명령이 있는 혼합 Windows 및 Android 플레이어 네트워크에 유용할 수 있습니다. Windows에서 &#39;Reboot&#39;의 명령 문자열은 <code>shutdown /r /t 0</code>이고, Android에서는 <code>reboot</code>입니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>이는 혼합되지 않은 네트워크에서도 유용할 수 있습니다 - HDMI/RS232를 통해 연결된 다른 모니터가 있는 Windows 플레이어 네트워크를 상상해보세요. &#39;Monitor On&#39;이라는 단일 명령을 만들 수 있으며, 다른 브랜드의 모니터는 다른 디스플레이 설정 프로필로 나타내고, 각각 모니터를 켜고 끄는 다른 명령 문자열을 가질 수 있습니다.</p></div><h3 id="사용-가능한-곳" tabindex="-1">사용 가능한 곳 <a class="header-anchor" href="#사용-가능한-곳" aria-label="Permalink to &quot;사용 가능한 곳&quot;">​</a></h3><p>명령이 사용 가능한 디스플레이 유형을 선택하세요. 비워두면 모든 유형의 디스플레이에 명령이 적용됩니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>명령</strong> 및 <strong>검증</strong> 문자열은 <a href="/SignaLink-manual/displays/settings.html#setting_on_the_display">디스플레이 프로필</a>을 편집하고 <strong>명령</strong> 탭을 사용하여 재정의할 수 있습니다!</p></div><h2 id="xmr-명령-전송" tabindex="-1">XMR 명령 전송 <a class="header-anchor" href="#xmr-명령-전송" aria-label="Permalink to &quot;XMR 명령 전송&quot;">​</a></h2><p>행 메뉴를 사용하여 디스플레이/디스플레이 그룹에서 <strong>XMR</strong>을 통해 명령을 실행하세요:</p><h2 id="명령-스케줄링" tabindex="-1">명령 스케줄링 <a class="header-anchor" href="#명령-스케줄링" aria-label="Permalink to &quot;명령 스케줄링&quot;">​</a></h2><p><strong>명령을 스케줄</strong>하여 특정 시간에 실행되도록 하세요</p><ul><li><p>CMS 메인 메뉴에서 <strong>스케줄</strong>을 클릭하세요.</p></li><li><p>스케줄 그리드 상단에서 <a href="./scheduling_events.html">이벤트 추가</a>를 선택하세요.</p></li><li><p>이벤트 유형 드롭다운에서 <strong>명령</strong>을 선택하세요.</p></li><li><p>폼 필드를 완성하고 사용할 <strong>명령</strong>과 <strong>시작 시간</strong>을 선택하세요.</p></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>예약된 명령은 플레이어에서 한 번 실행되며 <strong>시작</strong> 날짜와 시간만 필요합니다. 명령은 선택한 시간 후 최대 10초까지 실행될 수 있습니다.</p></div><h2 id="셸-명령" tabindex="-1">셸 명령 <a class="header-anchor" href="#셸-명령" aria-label="Permalink to &quot;셸 명령&quot;">​</a></h2><p><a href="./media_module_shellcommand.html">셸 명령 위젯</a>을 사용하여 레이아웃 활동을 기반으로 외부 명령을 실행하세요.</p><p>명령을 소스로 하는 셸 명령은 일반 셸 명령과 동일한 방식으로 작동합니다. 명령은 위젯이 레이아웃에 표시될 때 실행됩니다.</p><p>셸 명령은 모든 플레이어에 대한 옵션이 제공되는 명령 문자열일 수도 있습니다. 이를 통해 사용자는 일회용으로 &#39;임시&#39; 명령을 추가할 수 있습니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>가능한 경우 관리자가 미리 정의된 명령을 생성하는 것을 권장합니다!</p></div><h2 id="모니터-켜기-끄기" tabindex="-1">모니터 켜기/끄기 <a class="header-anchor" href="#모니터-켜기-끄기" aria-label="Permalink to &quot;모니터 켜기/끄기&quot;">​</a></h2><h3 id="hdmi-cec" tabindex="-1">HDMI-CEC <a class="header-anchor" href="#hdmi-cec" aria-label="Permalink to &quot;HDMI-CEC&quot;">​</a></h3><p>HDMI-CEC는 HDMI 커넥터가 있는 거의 모든 새로운 대형 화면 TV에 구현된 버스입니다. 이 버스(일반 HDMI 케이블 내에서 물리적으로 연결됨)는 전원 켜기, 전원 끄기, 볼륨 조정, 비디오 소스 선택 및 TV 리모컨을 통해 액세스할 수 있는 많은 기능을 수행할 수 있는 제어 신호를 지원합니다. 또한 HDMI 버스의 대부분의 다른 하드웨어를 제어할 수 있습니다.</p><p>SignaLink는 제조업체 사양이 다양하기 때문에 HDMI-CEC에 대한 직접 인터페이스를 제공하지 않지만, 배치 파일을 통해 HDMI-CEC를 제어할 수 있습니다.</p><h3 id="시리얼-rs232" tabindex="-1">시리얼/RS232 <a class="header-anchor" href="#시리얼-rs232" aria-label="Permalink to &quot;시리얼/RS232&quot;">​</a></h3><p>산업용 모니터는 종종 모니터 패널을 켜고 끄기 위한 시리얼 인터페이스를 가지고 있습니다. SignaLink는 RS232 명령 헬퍼를 사용하여 이러한 명령을 모니터로 보낼 수 있습니다 - 보통 HEX 모드에서.</p><p>다음 모니터와 명령이 테스트되었습니다:</p><h4 id="nec-e464" tabindex="-1">NEC E464 <a class="header-anchor" href="#nec-e464" aria-label="Permalink to &quot;NEC E464&quot;">​</a></h4><ul><li>전원 켜기 - <code>rs232|COM1,9600,8,None,One,None,1|01 30 41 30 41 30 43 02 43 32 30 33 44 36 30 30 30 31 03 73 0d</code></li><li>전원 끄기 - <code>rs232|COM1,9600,8,None,One,None,1|01 30 41 30 41 30 43 02 43 32 30 33 44 36 30 30 30 34 03 76 0d</code></li></ul><h4 id="sharp-lc-42d69u" tabindex="-1">Sharp LC-42D69U <a class="header-anchor" href="#sharp-lc-42d69u" aria-label="Permalink to &quot;Sharp LC-42D69U&quot;">​</a></h4><ul><li>전원 켜기 - <code>rs232|COM1,9600,8,None,One,None,1|50 4F 57 52 31 20 20 20 0D</code></li><li>전원 끄기 - <code>rs232|COM1,9600,8,None,One,None,1|50 4F 57 52 00 20 20 20 0D</code></li></ul><h4 id="lg-55lk520" tabindex="-1">LG 55LK520 <a class="header-anchor" href="#lg-55lk520" aria-label="Permalink to &quot;LG 55LK520&quot;">​</a></h4><ul><li>전원 켜기 - <code>rs232|COM1,9600,8,None,One,None,1|6B 61 20 30 30 20 30 31 0D</code></li><li>전원 끄기 - <code>rs232|COM1,9600,8,None,One,None,1|6B 61 20 30 30 20 30 30 0D</code></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>각 브랜드의 다른 모델도 동일한 명령을 사용해야 한다는 점에 유의해야 합니다.</p></div>`,80)]))}const m=n(p,[["render",l]]);export{b as __pageData,m as default};
